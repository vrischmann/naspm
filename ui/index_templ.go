// Code generated by templ@v0.2.305-0.20230728125512-df253a64c573 DO NOT EDIT.

package ui

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

type Status struct {
	Status  string
	Message string
}

func Index(basePath string, status Status) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<!doctype html><html><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><link rel=\"stylesheet\" type=\"text/css\" href=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(basePath + "/assets/style.css"))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><title>")
		if err != nil {
			return err
		}
		var_2 := `My NAS`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</title></head><body><h1>")
		if err != nil {
			return err
		}
		var_3 := `My NAS`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1>")
		if err != nil {
			return err
		}
		if status.Status != "" && status.Message != "" {
			var var_4 = []any{status.Status}
			err = templ.RenderCSSItems(ctx, templBuffer, var_4...)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("<h3 class=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_4).String()))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\">")
			if err != nil {
				return err
			}
			var var_5 string = status.Message
			_, err = templBuffer.WriteString(templ.EscapeString(var_5))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h3>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("<form method=\"POST\" action=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(basePath + "/do"))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><button name=\"wakeup\" id=\"wakeup\" class=\"green\">")
		if err != nil {
			return err
		}
		var_6 := `Wake up`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button><button name=\"sleep\" id=\"sleep\" class=\"red\">")
		if err != nil {
			return err
		}
		var_7 := `Sleep`
		_, err = templBuffer.WriteString(var_7)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></form></body></html>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}
